buildscript {
    ext.kotlin_version = '1.1.+'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'kotlin'

mainClassName = "scrapperkt.MainKt"


repositories {
    mavenCentral()
    jcenter()
}

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
    include 'scrapperkt/**'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}


dependencies {
    compile 'com.github.kittinunf.fuel:fuel:+' //for JVM
    //compile 'com.github.kittinunf.fuel:fuel-rxjava:+' //for RxJava support
    //compile 'com.github.kittinunf.fuel:fuel-gson:+' //for Gson support
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes 'Main-Class': 'scrapperkt.MainKt'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}